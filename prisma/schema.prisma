// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Character {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String?
  race          String?
  class         String?
  background    String?
  abilityScores Json // Stores the ability scores object
  equipment     Json // Array of equipment strings
  skills        Json // Array of selected skills
  rollDetails   Json // Stores the roll details object
  hp            Int?
  userId        String? // Optional: for user association
  games         Game[]   @relation("GameCharacters")
}

model Game {
  id         String      @id @default(cuid())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  characters Character[] @relation("GameCharacters")
}

model Monster {
  id                     String            @id @default(uuid())
  slug                   String            @unique
  name                   String            @unique
  size                   String
  type                   String
  alignment              String
  armor_class            String
  hit_points             Int
  hit_dice               String?
  hit_points_roll        String?
  speed                  String
  abilities              Ability[]
  actions                Action[]
  special_abilities      SpecialAbility[]
  description            String?
  source                 String
  imageUrl               String?
  saving_throws          SavingThrows?     @relation(fields: [savingThrowsId], references: [id])
  skills                 Json
  senses                 Json
  languages              Json
  damage_immunities      Json
  condition_immunities   Json
  damage_resistances     Json
  proficiency_bonus      Json
  damage_vulnerabilities Json
  challenge_rating       Int?
  xp                     Int
  abilitiesId            String?
  savingThrowsId         String?
  legendary_actions      LegendaryAction[]
}

model Ability {
  id        String  @id @default(uuid())
  name      String
  value     Int
  modifier  String
  monsterId String
  monster   Monster @relation(fields: [monsterId], references: [id])
}

model Action {
  id          String  @id @default(uuid())
  name        String
  description String
  monsterId   String
  monster     Monster @relation(fields: [monsterId], references: [id])
}

model LegendaryAction {
  id          String  @id @default(uuid())
  name        String
  description String
  monsterId   String
  monster     Monster @relation(fields: [monsterId], references: [id])
}

model SpecialAbility {
  id          String  @id @default(uuid())
  name        String
  description String
  monsterId   String
  monster     Monster @relation(fields: [monsterId], references: [id])
}

model SavingThrows {
  id      String    @id @default(uuid())
  STR     String?
  DEX     String?
  CON     String?
  INT     String?
  WIS     String?
  CHA     String?
  Monster Monster[]
}
